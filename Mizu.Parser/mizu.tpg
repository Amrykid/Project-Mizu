//Tiny Parser Generator v1.3
//Copyright Â© Herre Kuijpers 2008-2012

// By default the TextHighlighter is not generated.
// Set its Generate attribute to true
<% @TextHighlighter Generate="True" %>
// the Generate parameter specifies wether the file
// should be generated. By default this is set to True
<% @Parser Generate="True" %>
<% @Scanner Generate="True" %>

<% @ParseTree Generate="True" %>

<% @TinyPG Namespace="Mizu.Parser" Language="C#" OutputPath="C:\\Users\\alex\\Documents\\visual studio 2010\\Projects\\Mizu\\Mizu.Parser\\" %>


// highlight numbers in red and symbols in blue
[Color(255, 0, 0)] NUMBER -> @"(\-)?[0-9]+";
[Color(255, 0, 0)] FLOAT -> @"(\-)?[0-9]+\.[0-9]+"; 

[Color(0, 0, 255)] PLUSMINUS -> @"(\+|-)"; 
[Color(0, 0, 255)] MULTDIV -> @"\*|/"; 
[Color(0, 0, 255)] BROPEN -> @"\("; 
[Color(0, 0, 255)] BRCLOSE -> @"\)";
EOF -> @"^\s*$";
[Color(0, 0, 255)] IDENTIFIER -> @"[a-zA-Z_][a-zA-Z0-9_]*";
SET -> @"\`";
WHITESPACE       -> @"\s+";
OPENBR -> @"\[";
CLOSEBR -> @"\]";
PERIOD -> @"\.";
STATEMENTSEP -> @"\|";
QUESTION -> @"\?";
COLON -> @"\:";
COMMAND -> @"ABS";
ABS -> @"\@";
SIN -> @"\$";
COS -> @"\&";
TAN -> @"\#";
SQRT -> @"\%";
EQUAL -> @"\=";
UPPER -> @"\^";
COMMA -> @"\,";
NEWLINE -> @"(\r\n|\n)";
MULTINEWLINE -> @"(\r\n|\n)+";
WAVEY -> @"\~";
STRING -> @"\"".+?\""";
EXCLAM -> @"\!";
GT -> @"\<";
GTE -> @"\<\=";
DEQUAL -> @"\=\=";
LT -> @"\>";
LTE -> @"\>\=";
NOTEQUAL -> @"(\!\=|\<\>)";
OPENBRCK -> @"\{";
CLOSEBRCK -> @"\}";
STAR -> @"\*";

[Skip] COMMENTBLOCK     -> @"/\*[^*]*\*+(?:[^/*][^*]*\*+)*/(\r\n|\n)";


Start -> (Statements)?;
Statements -> Statement*;
Statement -> (EvalStatement | VarStatement | PrintStatement | MathCMDStatement | BlockedStatement) (EOF|(NEWLINE+|STATEMENTSEP+ (MULTINEWLINE?)) (EOF)?);
EvalStatement -> QUESTION IDENTIFIER (COLON|EQUAL) AddExpr;
VarStatement -> IDENTIFIER SET ((NUMBER|FLOAT)|OPENBR NUMBER (PERIOD PERIOD NUMBER|(COMMA NUMBER)+) CLOSEBR|UPPER (WAVEY?));
PrintStatement -> PERIOD ((IDENTIFIER?|NUMBER|FLOAT) (PERIOD)?|STRING PERIOD|SIN STRING WHITESPACE ((IDENTIFIER|NUMBER|FLOAT)WHITESPACE?)+ PERIOD);
MathCMDStatement -> (ABS|SIN|TAN|SQRT) BROPEN (IDENTIFIER) BRCLOSE;
BlockedStatement -> OPENBR (IfStatement | SwitchStatement) CLOSEBR;
IfStatement -> (IDENTIFIER|NUMBER|FLOAT) (NOTEQUAL|GTE|GT|DEQUAL|LTE|LT) (IDENTIFIER|NUMBER|FLOAT) COLON OPENBRCK (WHITESPACE|NEWLINE?) Statements CLOSEBRCK (COMMA (WHITESPACE|NEWLINE?) OPENBRCK (WHITESPACE|NEWLINE?) Statements CLOSEBRCK)?;
SwitchStatement -> EXCLAM IDENTIFIER COLON OPENBRCK (WHITESPACE|NEWLINE?) (SwitchCaseStatement)+ (WHITESPACE|NEWLINE?) CLOSEBRCK;
SwitchCaseStatement -> (IDENTIFIER|NUMBER|FLOAT|STAR) COLON NEWLINE Statements;

//From the tinypg article.
AddExpr     -> MultExpr (PLUSMINUS MultExpr)*;
MultExpr    -> Atom (MULTDIV Atom)*;
Atom        -> NUMBER|FLOAT|IDENTIFIER|BROPEN AddExpr BRCLOSE;